name: Build and Release Zapzap

on:
  release:
    types: [created]

jobs:
  build-release:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: '3.13'

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # 3️⃣ Install build tools
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      # 4️⃣ Get version from tag
      - name: Get version from tag
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # 5️⃣ Build wheel
      - name: Build wheel
        run: python -m build --wheel --outdir dist

      # 6️⃣ List dist folder
      - name: List dist folder
        run: ls -l dist/

      # 7️⃣ Install fpm
      - name: Install fpm
        run: |
          sudo apt update
          sudo apt install -y ruby ruby-dev build-essential
          sudo gem install --no-document fpm

      # 8️⃣ Build .deb using fpm -s dir
      - name: Build .deb package with fpm (dir method)
        run: |
          set -e

          # Encontrar wheel
          WHEEL_FILE=$(ls dist/*.whl | head -n 1)
          echo "Wheel file: $WHEEL_FILE"

          # Criar diretórios temporários
          rm -rf package
          mkdir -p package/usr/bin
          mkdir -p package/usr/lib/python3/site-packages
          mkdir -p package/usr/share/applications
          mkdir -p package/usr/share/icons/hicolor/scalable/apps

          # Instalar conteúdo do wheel no package
          python3 -m pip install --target package/usr/lib/python3/site-packages/ "$WHEEL_FILE"

          # Criar wrapper executável em /usr/bin/zapzap
          cat > package/usr/bin/zapzap << 'EOF'
              #!/usr/bin/env python3
              import sys
              from zapzap.__main__ import main

              if __name__ == "__main__":
                  sys.exit(main())
              EOF
          chmod +x package/usr/bin/zapzap

          # Copiar .desktop e ícone
          cp share/applications/com.rtosta.zapzap.desktop package/usr/share/applications/
          cp share/icons/com.rtosta.zapzap.svg package/usr/share/icons/hicolor/scalable/apps/

          # Ajustar .desktop para comando global
          sed -i 's|Exec=.*|Exec=/usr/bin/zapzap|' package/usr/share/applications/com.rtosta.zapzap.desktop
          sed -i 's|Icon=.*|Icon=com.rtosta.zapzap|' package/usr/share/applications/com.rtosta.zapzap.desktop

          # Criar arquivo temporário para after-install
          echo 'echo "ZapZap installed successfully"' > after-install.sh
          chmod +x after-install.sh

          # Gerar .deb com fpm
          fpm -s dir -t deb package/ \
            --name zapzap \
            --version "${{ env.VERSION }}" \
            --depends python3-pyqt6 \
            --depends python3-pyqt6-webengine \
            --depends python3-dbus \
            --description "ZapZap — WhatsApp client web app" \
            --license "GPL-3.0-or-later" \
            --url "https://rtosta.com/zapzap" \
            --vendor "Rafael Tosta" \
            --maintainer "Rafael Tosta <rafa.ecomp@gmail.com>" \
            --architecture all \
            --after-install after-install.sh

      # 9️⃣ Release to GitHub
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
            *.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
